#include <stdio.h>
#include <string.h>

// Definição da estrutura para representar cada aluno
typedef struct {
    char name[50];
    float grades[3];
    int attendance;
    float finalAverage;
    char status[15];
} Student;

// Função para calcular a média das duas maiores notas
float calculateAverage(float grades[]) {
    float highest1 = 0, highest2 = 0;
    for (int i = 0; i < 3; i++) {
        if (grades[i] > highest1) {
            highest2 = highest1;
            highest1 = grades[i];
        } else if (grades[i] > highest2) {
            highest2 = grades[i];
        }
    }
    return (highest1 + highest2) / 2.0;
}

// Função para determinar a situação do aluno
void evaluateStudent(Student *student) {
    student->finalAverage = calculateAverage(student->grades);
    if (student->finalAverage >= 7.0 && student->attendance >= 75) {
        strcpy(student->status, "Approved");
    } else {
        strcpy(student->status, "Failed");
    }
}

// Função para gerar o relatório
void generateReport(Student students[], int studentCount) {
    printf("\nReport:\n");
    printf("%-20s %-10s %-10s\n", "Name", "Average", "Status");
    printf("------------------------------------------------\n");
    for (int i = 0; i < studentCount; i++) {
        printf("%-20s %-10.2f %-10s\n", students[i].name, students[i].finalAverage, students[i].status);
    }
}

int main() {
    int studentCount;
    printf("Enter the number of students: ");
    scanf("%d", &studentCount);

    Student students[studentCount];

    // Entrada de dados
    for (int i = 0; i < studentCount; i++) {
        printf("\nEnter details for student %d:\n", i + 1);
        printf("Name: ");
        scanf(" %[^\n]%*c", students[i].name);
        printf("Enter 3 grades: ");
        for (int j = 0; j < 3; j++) {
            scanf("%f", &students[i].grades[j]);
        }
        printf("Attendance (in percentage): ");
        scanf("%d", &students[i].attendance);

        // Avaliar o aluno
        evaluateStudent(&students[i]);
    }

    // Gerar o relatório final
    generateReport(students, studentCount);

    return 0;
}
